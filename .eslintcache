[{"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\index.tsx":"1","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\App.tsx":"2","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\routes\\index.tsx":"3","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Dashboard\\index.tsx":"4","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Repository\\index.tsx":"5","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Dashboard\\styles.ts":"6","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\styles\\global.ts":"7","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\services\\api.ts":"8","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Repository\\styles.ts":"9"},{"size":199,"mtime":1607071510404,"results":"10","hashOfConfig":"11"},{"size":285,"mtime":1607416558940,"results":"12","hashOfConfig":"11"},{"size":400,"mtime":1608073401634,"results":"13","hashOfConfig":"11"},{"size":2959,"mtime":1608075363003,"results":"14","hashOfConfig":"11"},{"size":2867,"mtime":1608170837802,"results":"15","hashOfConfig":"11"},{"size":2260,"mtime":1607632775359,"results":"16","hashOfConfig":"11"},{"size":643,"mtime":1607417423848,"results":"17","hashOfConfig":"11"},{"size":124,"mtime":1607620025095,"results":"18","hashOfConfig":"11"},{"size":2323,"mtime":1608083451132,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uu1dev",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\index.tsx",[],["41","42"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\App.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\routes\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Repository\\index.tsx",["43"],"import React, {useEffect, useState} from 'react';\r\nimport {useRouteMatch, Link} from 'react-router-dom';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\nimport logoImg from '../../assets/github-logo.svg';\r\nimport {Header, RepositoryInfo, Issues} from './styles';\r\n\r\ninterface RepositoryParams{\r\n    repository: string;\r\n}\r\n\r\ninterface Repository{\r\n    full_name: string;\r\n    description: string;\r\n    stargazers_count: number;\r\n    forks_count: number;\r\n    open_issues_count: number;\r\n    owner: {\r\n        login: string;\r\n        avatar_url: string;\r\n    };\r\n}\r\n\r\ninterface Issue{\r\n    id: number;\r\n    title: string;\r\n    html_url: string;\r\n    user: {\r\n        login:string;\r\n    }\r\n}\r\n\r\n\r\nconst Repository: React.FC = () => {\r\n    const [repository, setRepository] = useState<Repository | null>(null);\r\n    const [issues, setIssues] = useState<Issue[]>([]);\r\n\r\n    const { params } = useRouteMatch<RepositoryParams>();\r\n    \r\n\r\n    useEffect(() => {\r\n        api.get(`repos/${params.repository}`).then((response) => {\r\n            setRepository(response.data)\r\n        });\r\n        api.get(`repos/${params.repository}/issues `).then((response) => {\r\n            setIssues(response.data);\r\n        });\r\n    }, [params.repository]);\r\n\r\n    return (\r\n        <>\r\n        <Header>\r\n            <img src={logoImg} alt=\"Github Explorer\"/>\r\n            <Link to=\"/\">\r\n                <FiChevronLeft size={16} />\r\n                Voltar            \r\n            </Link>\r\n        </Header>\r\n\r\n        {repository && (\r\n            <RepositoryInfo>\r\n            <header>\r\n                <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\r\n                <div>\r\n                    <strong>{repository.full_name}</strong>\r\n                    <p>{repository.description}</p>\r\n                </div>\r\n            </header>\r\n            <ul>\r\n                <li>\r\n                    <strong>{repository.stargazers_count}</strong>\r\n                    <span>Stars</span>\r\n                </li>\r\n                <li>\r\n                    <strong>{repository.forks_count}</strong>\r\n                    <span>Forks</span>\r\n                </li>\r\n                <li>\r\n                    <strong>{repository.open_issues_count}</strong>\r\n                    <span>Issues abertas</span>\r\n                </li>\r\n            </ul>\r\n        </RepositoryInfo>\r\n\r\n        )}\r\n\r\n        <Issues>\r\n            {issues.map((issue) => (\r\n                <a key={issue.id} href={issue.html_url}>\r\n                <div>\r\n                        <strong>{issue.title}</strong> \r\n                        <p>{issue.user.login}</p>\r\n                </div>\r\n                <FiChevronRight size={20} />\r\n                </a> \r\n            ))}\r\n        </Issues>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Repository;","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\styles\\global.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\services\\api.ts",[],["44","45"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\primeiro-projeto-react\\src\\pages\\Repository\\styles.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":34,"column":7,"nodeType":"52","messageId":"53","endLine":34,"endColumn":27},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-redeclare","'Repository' is already defined.","Identifier","redeclared",["56"],["57"],"no-global-assign","no-unsafe-negation"]